import csv
import sys
import random
import cs50
import re
from cs50 import get_int
from cs50 import get_string

var = []

def main():
    
    #Make sure correct command line usage
    if len(sys.argv) != 3:
        sys.exit("Correct usage: python dna.py CSVfile DNAtxt")
    
    #Open CSV file and read contents into memory
    DNA = sys.argv[1]
    text = sys.argv[2]
    
    
    
    with open(DNA,"r") as file:
        reader = csv.DictReader(file)
        dnalist = []
        for row in reader:
            dnalist.append(row)
        
        #creates list of STR's from CSV file
        strs = list(getList(dnalist[0]))
        strs.remove('name')
    #Reads DNA sequence as a whole into memory as 'seq'
    with open(text,"r") as file:
        seq = file.read()
    
    #Global variable list is used to store counts of repeats generated by maxrepeats
    var.append(maxrepeats(seq, strs[0]))
    var.sort()

    
    # If the STR counts match exactly with any of the individuals in the CSV file, your program should print out the name of the matching individual.
    # You may assume that the STR counts will not match more than one individual.
    # If the STR counts do not match exactly with any of the individuals in the CSV file, your program should print "No match".
    dnakey = {}

    for i in range(0, len(strs), 1):
        var.append(maxrepeats(seq,strs[i]))
        var.sort()
        biggestnum = var[-1]
        dnakey[strs[i]] = biggestnum
        var.clear()
    for i in range(0, len(dnalist), 1):
        comparisons(dnalist[i], dnakey)
    
    sys.exit('no match')
    
#Gets keys from CSV    
def getList(dict):
    return dict.keys()
    
# Returns a list of how many times str appears consecutively
def maxrepeats(seq, strs):
    
    #Base case, when done splicing will return 0
    if seq.find(strs) < 0:
        return str(0)
    #Looks at seq to see if there are repeats. If there are, counter++ until no more are found, splice up until this repeat, and do it all again
    else:
        counter = 1
        k = seq.find(strs)
        l = len(strs)
        t = k + l
        n = k + l * 2
        while seq[k:t] == seq[t:n]:
            counter += 1
            k += l
            t += l
            n += l
        spliced = seq[(n - 1):(seq.rfind(strs) + l)]
        var.append(maxrepeats(spliced, strs))
        return str(counter)

def comparisons(d1, d2):
    name = d1.pop('name')
    
    if d1 == d2:
        print(name)
        quit()
    return
if __name__ == "__main__":
    main()